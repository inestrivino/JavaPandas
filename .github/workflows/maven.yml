name: Unit Tests

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

# This workflow:
#   - compiles the maven project
#   - executes tests
#   - checks code coverage of tests
#   - deploys to a GitHub package
#   - deploys the updated gh website

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4

    # Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Compiles the project
    - name: Compile Source Code
      run: mvn compile

    # Executes the project's tests
    - name: Execute Unit Tests
      run: mvn test

  coverage:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    # Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'

    # Checks what is the code coverage according to jacoco
    - name: Verify Code Coverage
      id: coverage
      run: |
        mvn verify
        mvn jacoco:report

        sudo apt-get install -y libxml2-utils
        cat target/site/jacoco/jacoco.xml
        # Extract all missed and covered instructions
        MISSED=$(xmllint --xpath 'sum(//counter[@type="INSTRUCTION"]/@missed)' target/site/jacoco/jacoco.xml)
        COVERED=$(xmllint --xpath 'sum(//counter[@type="INSTRUCTION"]/@covered)' target/site/jacoco/jacoco.xml)

        echo "Missed instructions: $MISSED"
        echo "Covered instructions: $COVERED"

         if [ "$COVERED" -eq 0 ] && [ "$MISSED" -eq 0 ]; then
          COVERAGE=100
        elif [ "$COVERED" -eq 0 ]; then
          COVERAGE=0
        else
          TOTAL=$((COVERED + MISSED))
          COVERAGE=$(( (100 * COVERED) / TOTAL ))
        fi

        echo "Calculated code coverage is $COVERAGE%"

        if [ -z "$COVERAGE" ]; then
          echo "Failed to extract coverage percentage from JaCoCo report."
          exit 1
        fi

        if [ "$COVERAGE" -lt 80 ]; then
          echo "Code coverage percentage was too low, cannot continue."
          exit 1
        fi

        echo "coverage=$COVERAGE" >> $GITHUB_ENV
        echo "$COVERAGE" > coverage.txt


  deploy:
    runs-on: ubuntu-latest
    needs: coverage
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    # Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Deploy Snapshot to GitHub Packages
    - name: Deploy Snapshot to GitHub Packages
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/inestrivino/JavaPandas
      env:
        GITHUB_TOKEN: ${{ github.token }}

  generates-site:
    name: Générer le site Maven
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Configurer Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/inestrivino/javapandas.git

      - name: Générer le site
        run: mvn clean site

      - name: Publier le site sur gh-pages
        run: mvn scm-publish:publish-scm -Dgithub.token=${{ secrets.GITHUB_TOKEN }}
    