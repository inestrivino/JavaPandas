name: Maven Package

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

#This workflow compiles the maven project and executes tests that check for code correction and coverage, to be deployed to a github package

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    #Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    #Compiles the project
    - name: Compile Source Code
      run: mvn compile

    #Executes the project's tests
    - name: Execute Unit Tests
      run: mvn test

    #Checks what is the code coverage according to jacoco
    - name: Verify Code Coverage
      id: coverage
      run: |
        mvn verify
        COVERAGE=$(mvn jacoco:report | grep -oP 'Total.*?\K\d{1,3}(?=%)')
        echo "Code coverage is $COVERAGE%"
        echo "coverage=$COVERAGE" >> $GITHUB_ENV
        echo "$COVERAGE" > coverage.txt  # Save coverage to a file

    #If the branch is main, the previous steps went well, and the coverage is acceptable, the code is deployed as a github package
    - name: Deploy Snapshot to GitHub Packages
      if: github.ref == 'refs/heads/main' && env.coverage >= 80 && success()
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/inestrivino/JavaPandas
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    #We upload a report of the coverage to be used by the docker workflow
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.txt