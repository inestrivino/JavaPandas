name: Maven Package

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

# This workflow compiles the maven project, executes tests, checks code coverage, and deploys to a GitHub package. It does so for all branches.

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    # Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Compiles the project
    - name: Compile Source Code
      run: mvn compile

    # Executes the project's tests
    - name: Execute Unit Tests
      run: mvn test

  coverage:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    # Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'

    # Checks what is the code coverage according to jacoco
    # TODO update minimum code coverage to 80 when we start implementing the code
    - name: Verify Code Coverage
      id: coverage
      run: |
        mvn verify
        mvn jacoco:report

        sudo apt-get install -y libxml2-utils

        COVERAGE=$(xmllint --xpath 'string(//counter[@type="INSTRUCTION"]/@missed div //counter[@type="INSTRUCTION"]/@covered * 100)' target/site/jacoco/jacoco.xml | awk -F'.' '{print $1}')

        if [ -z "$COVERAGE" ]; then
          echo "Failed to extract coverage percentage from JaCoCo report."
          exit 1
        fi
        echo "Code coverage is $COVERAGE%"
        if [ "$COVERAGE" -lt 0 ]; then 
          echo "Code coverage percentage was too low, cannot continue."
          exit 1
        fi
        echo "coverage=$COVERAGE" >> $GITHUB_ENV
        echo "$COVERAGE" > coverage.txt

  deploy:
    runs-on: ubuntu-latest
    needs: coverage
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    # Set up the JDK environment
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Deploy Snapshot to GitHub Packages
    - name: Deploy Snapshot to GitHub Packages
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/inestrivino/JavaPandas
      env:
        GITHUB_TOKEN: ${{ github.token }}
